{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to WordOps documentation Overview Getting-started Migration from EasyEngine V3 WordOps commands F.A.Q Troubleshooting Important WordOps documentation publication is in progress","title":"Home"},{"location":"#welcome-to-wordops-documentation","text":"","title":"Welcome to WordOps documentation"},{"location":"#overview","text":"Getting-started Migration from EasyEngine V3 WordOps commands F.A.Q Troubleshooting","title":"Overview"},{"location":"#important","text":"WordOps documentation publication is in progress","title":"Important"},{"location":"commands/","text":"WordOps commands Overview command feature example site create , update , delete , list sites wo site create site.tld --wp stack install/remove WordOps server stacks wo stack install --nginx debug commands to do server level debugging wo debug site.tld --php clean clean Wordops cache backend wo clean --fastcgi info display server stack informations wo info --nginx log perform operation on logs wo log show --nginx secure manage WordOps backend authentification wo secure --auth maintenance perform server package updates wo maintenance update update WordOps wo update site create Basic sites HTML site To create simple html website use this command. wo site create example.com --html PHP site To create simple php website with no database use this command. wo site create example.com --php PHP+MySQL site To create simple php website with database use this command. wo site create example.com --mysql NOTE: You can find MySQL database details in wo-config.php file. Proxy site To create site with Proxy configuration you can use --proxy during site creation wo site create example.com --proxy=host[:port] Here port is optional and default value is 80. For example, wo site create example.com --proxy=1.2.3.4 This will create proxy site example.com with proxy destination as 1.2.3.4 WordPress Following are the WordPress website types you can create website based on Cache Mechanism Standard sites cache PHP example no cache PHP 7.2 wo site create site.tld --wp no cache PHP 7.3 wo site create site.tld --wp --php73 fastcgi_cache PHP 7.2 wo site create site.tld --wpfc fastcgi_cache PHP 7.3 wo site create site.tld --wpfc --php73 wp-super-cache PHP 7.2 wo site create site.tld --wpsc wp-super-cache PHP 7.3 wo site create site.tld --wpsc --php73 redis-cache PHP 7.2 wo site create site.tld --wpredis redis-cache PHP 7.3 wo site create site.tld --wpredis --php73 Multisite subdirectory cache PHP example no cache PHP 7.2 wo site create site.tld --wpsubdir no cache PHP 7.3 wo site create site.tld --wpsubdir --php73 fastcgi_cache PHP 7.2 wo site create site.tld --wpsubdir --wpfc fastcgi_cache PHP 7.3 wo site create site.tld --wpsubdir --wpfc --php73 wp-super-cache PHP 7.2 wo site create site.tld --wpsubdir --wpsc wp-super-cache PHP 7.3 wo site create site.tld --wpsubdir --wpsc --php73 redis-cache PHP 7.2 wo site create site.tld --wpsubdir --wpredis redis-cache PHP 7.3 wo site create site.tld --wpsubdir --wpredis --php73 Multisite subdomain cache PHP example no cache PHP 7.2 wo site create site.tld --wpsubdom no cache PHP 7.3 wo site create site.tld --wpsubdom --php73 fastcgi_cache PHP 7.2 wo site create site.tld --wpsubdir --wpfc fastcgi_cache PHP 7.3 wo site create site.tld --wpsubdom --wpfc --php73 wp-super-cache PHP 7.2 wo site create site.tld --wpsubdom --wpsc wp-super-cache PHP 7.3 wo site create site.tld --wpsubdom --wpsc --php73 redis-cache PHP 7.2 wo site create site.tld --wpsubdom --wpredis redis-cache PHP 7.3 wo site create site.tld --wpsubdom --wpredis --php73 Extra settings Define WordPress administrator user To define wordpress administrator user during site creation use wo site create example.com --user=admin This will create admin as administrator user in wordpress during installation. If not defined it will take git user name. Define WordPress administrator password To define wordpress administrator password during site creation use wo site create example.com --pass=password This will set defined password as administrator password. If not defined it will generate random pasword for administrator. If you have special characters, you can quote them using single quotes like this : --pass='my$secret&' Define WordPress administrator email To define wordpress administrator email during site creation use wo site create example.com --email=wo@site.tld This will set defined email as administrator email. If not defined it will set git email as administrator email. Let's Encrypt WordOps supports Let's Encrypt out of the box. wo site create site.tld --letsencrypt This command will issue a certificate for site.tld + www.site.tld. But WordOps also supports issuing Let's Encrypt certificates with subdomains. wo site create example.com --letsencrypt=subdomain You can add --letsencrypt to any other flag. PHP 7.3 To create site with PHP 7.3 you can use --php73 during site creation For example, you can create WordPress site running on PHP 7.3 using following command: wo site create example.com --wp --php73 To create simple php(with v7.3) website with no database use this command. wo site create example.com --php73 update delete To delete site created with EasyEngine (wo) use wo site delete example.com</code> Delete website without prompt wo site delete example.com --no-prompt</code> Delete website webroot only wo site delete example.com --files</code> Delete website database only wo site delete example.com --db</code> stack install Web This will install Nginx, PHP 7.2, MariaDB & additional tools available on port 22222 wo stack install or wo stack install web Admin tools wo stack install --admin Individual packages Nginx wo stack install --nginx PHP 7.2 wo stack install --php MariaDB (MySQL) wo stack install --mysql Adminer wo stack install --adminer PHPMyAdmin wo stack install --phpmyadmin debug clean info log secure maintenance update","title":"WordOps commands"},{"location":"commands/#wordops-commands","text":"","title":"WordOps commands"},{"location":"commands/#overview","text":"command feature example site create , update , delete , list sites wo site create site.tld --wp stack install/remove WordOps server stacks wo stack install --nginx debug commands to do server level debugging wo debug site.tld --php clean clean Wordops cache backend wo clean --fastcgi info display server stack informations wo info --nginx log perform operation on logs wo log show --nginx secure manage WordOps backend authentification wo secure --auth maintenance perform server package updates wo maintenance update update WordOps wo update","title":"Overview"},{"location":"commands/#site","text":"","title":"site"},{"location":"commands/#create","text":"","title":"create"},{"location":"commands/#basic-sites","text":"","title":"Basic sites"},{"location":"commands/#html-site","text":"To create simple html website use this command. wo site create example.com --html","title":"HTML site"},{"location":"commands/#php-site","text":"To create simple php website with no database use this command. wo site create example.com --php","title":"PHP site"},{"location":"commands/#phpmysql-site","text":"To create simple php website with database use this command. wo site create example.com --mysql NOTE: You can find MySQL database details in wo-config.php file.","title":"PHP+MySQL site"},{"location":"commands/#proxy-site","text":"To create site with Proxy configuration you can use --proxy during site creation wo site create example.com --proxy=host[:port] Here port is optional and default value is 80. For example, wo site create example.com --proxy=1.2.3.4 This will create proxy site example.com with proxy destination as 1.2.3.4","title":"Proxy site"},{"location":"commands/#wordpress","text":"Following are the WordPress website types you can create website based on Cache Mechanism","title":"WordPress"},{"location":"commands/#standard-sites","text":"cache PHP example no cache PHP 7.2 wo site create site.tld --wp no cache PHP 7.3 wo site create site.tld --wp --php73 fastcgi_cache PHP 7.2 wo site create site.tld --wpfc fastcgi_cache PHP 7.3 wo site create site.tld --wpfc --php73 wp-super-cache PHP 7.2 wo site create site.tld --wpsc wp-super-cache PHP 7.3 wo site create site.tld --wpsc --php73 redis-cache PHP 7.2 wo site create site.tld --wpredis redis-cache PHP 7.3 wo site create site.tld --wpredis --php73","title":"Standard sites"},{"location":"commands/#multisite-subdirectory","text":"cache PHP example no cache PHP 7.2 wo site create site.tld --wpsubdir no cache PHP 7.3 wo site create site.tld --wpsubdir --php73 fastcgi_cache PHP 7.2 wo site create site.tld --wpsubdir --wpfc fastcgi_cache PHP 7.3 wo site create site.tld --wpsubdir --wpfc --php73 wp-super-cache PHP 7.2 wo site create site.tld --wpsubdir --wpsc wp-super-cache PHP 7.3 wo site create site.tld --wpsubdir --wpsc --php73 redis-cache PHP 7.2 wo site create site.tld --wpsubdir --wpredis redis-cache PHP 7.3 wo site create site.tld --wpsubdir --wpredis --php73","title":"Multisite subdirectory"},{"location":"commands/#multisite-subdomain","text":"cache PHP example no cache PHP 7.2 wo site create site.tld --wpsubdom no cache PHP 7.3 wo site create site.tld --wpsubdom --php73 fastcgi_cache PHP 7.2 wo site create site.tld --wpsubdir --wpfc fastcgi_cache PHP 7.3 wo site create site.tld --wpsubdom --wpfc --php73 wp-super-cache PHP 7.2 wo site create site.tld --wpsubdom --wpsc wp-super-cache PHP 7.3 wo site create site.tld --wpsubdom --wpsc --php73 redis-cache PHP 7.2 wo site create site.tld --wpsubdom --wpredis redis-cache PHP 7.3 wo site create site.tld --wpsubdom --wpredis --php73","title":"Multisite subdomain"},{"location":"commands/#extra-settings","text":"Define WordPress administrator user To define wordpress administrator user during site creation use wo site create example.com --user=admin This will create admin as administrator user in wordpress during installation. If not defined it will take git user name. Define WordPress administrator password To define wordpress administrator password during site creation use wo site create example.com --pass=password This will set defined password as administrator password. If not defined it will generate random pasword for administrator. If you have special characters, you can quote them using single quotes like this : --pass='my$secret&' Define WordPress administrator email To define wordpress administrator email during site creation use wo site create example.com --email=wo@site.tld This will set defined email as administrator email. If not defined it will set git email as administrator email.","title":"Extra settings"},{"location":"commands/#lets-encrypt","text":"WordOps supports Let's Encrypt out of the box. wo site create site.tld --letsencrypt This command will issue a certificate for site.tld + www.site.tld. But WordOps also supports issuing Let's Encrypt certificates with subdomains. wo site create example.com --letsencrypt=subdomain You can add --letsencrypt to any other flag.","title":"Let's Encrypt"},{"location":"commands/#php-73","text":"To create site with PHP 7.3 you can use --php73 during site creation For example, you can create WordPress site running on PHP 7.3 using following command: wo site create example.com --wp --php73 To create simple php(with v7.3) website with no database use this command. wo site create example.com --php73","title":"PHP 7.3"},{"location":"commands/#update","text":"","title":"update"},{"location":"commands/#delete","text":"To delete site created with EasyEngine (wo) use wo site delete example.com</code>","title":"delete"},{"location":"commands/#delete-website-without-prompt","text":"wo site delete example.com --no-prompt</code>","title":"Delete website without prompt"},{"location":"commands/#delete-website-webroot-only","text":"wo site delete example.com --files</code>","title":"Delete website webroot only"},{"location":"commands/#delete-website-database-only","text":"wo site delete example.com --db</code>","title":"Delete website database only"},{"location":"commands/#stack","text":"","title":"stack"},{"location":"commands/#install","text":"","title":"install"},{"location":"commands/#web","text":"This will install Nginx, PHP 7.2, MariaDB & additional tools available on port 22222 wo stack install or wo stack install web","title":"Web"},{"location":"commands/#admin-tools","text":"wo stack install --admin","title":"Admin tools"},{"location":"commands/#individual-packages","text":"","title":"Individual packages"},{"location":"commands/#nginx","text":"wo stack install --nginx","title":"Nginx"},{"location":"commands/#php-72","text":"wo stack install --php","title":"PHP 7.2"},{"location":"commands/#mariadb-mysql","text":"wo stack install --mysql","title":"MariaDB (MySQL)"},{"location":"commands/#adminer","text":"wo stack install --adminer","title":"Adminer"},{"location":"commands/#phpmyadmin","text":"wo stack install --phpmyadmin","title":"PHPMyAdmin"},{"location":"commands/#debug","text":"","title":"debug"},{"location":"commands/#clean","text":"","title":"clean"},{"location":"commands/#info","text":"","title":"info"},{"location":"commands/#log","text":"","title":"log"},{"location":"commands/#secure","text":"","title":"secure"},{"location":"commands/#maintenance","text":"","title":"maintenance"},{"location":"commands/#update_1","text":"","title":"update"},{"location":"faq/","text":"","title":"F.A.Q"},{"location":"getting-started/","text":"Getting Started Available Soon","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"","title":"Getting Started"},{"location":"getting-started/#available-soon","text":"","title":"Available Soon"},{"location":"migration-from-EasyEngine-V3/","text":"Migration from EasyEngine v3 Available Soon","title":"Migration from EasyEngine v3"},{"location":"migration-from-EasyEngine-V3/#migration-from-easyengine-v3","text":"","title":"Migration from EasyEngine v3"},{"location":"migration-from-EasyEngine-V3/#available-soon","text":"","title":"Available Soon"},{"location":"troubleshooting/","text":"","title":"Troubleshooting"}]}