{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to WordOps documentation Overview Guides Getting-started Migration from EasyEngine V3 Commands command feature site manage sites stack manage server stacks clean clean cache info server info secure secure backend sync synchronize db log show log update update WO debug debug Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to WordOps documentation"},{"location":"#welcome-to-wordops-documentation","text":"","title":"Welcome to WordOps documentation"},{"location":"#overview","text":"","title":"Overview"},{"location":"#guides","text":"Getting-started Migration from EasyEngine V3","title":"Guides"},{"location":"#commands","text":"command feature site manage sites stack manage server stacks clean clean cache info server info secure secure backend sync synchronize db log show log update update WO debug debug","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"getting-started/","text":"Getting Started Agitata quicquam pignora","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"","title":"Getting Started"},{"location":"getting-started/#agitata-quicquam-pignora","text":"","title":"Agitata quicquam pignora"},{"location":"migration-from-EasyEngine-V3/","text":"","title":"migration from EasyEngine V3"},{"location":"commands/clean/","text":"","title":"Clean"},{"location":"commands/debug/","text":"","title":"Debug"},{"location":"commands/import-slow-log/","text":"","title":"Import slow log"},{"location":"commands/info/","text":"","title":"Info"},{"location":"commands/log/","text":"","title":"Log"},{"location":"commands/secure/","text":"","title":"Secure"},{"location":"commands/site/","text":"Site wo site <command> <args> Overview command feature wo site create Create new site update Update site settings cd Go into site folder show Show site config log Show site logs enable Enable site disable Disable site info Show site info delete Delete site list list all sites Commands Create Standard sites HTML Website To create simple html website use this command. wo site create example.com --html PHP Website To create simple php website with no database use this command. wo site create example.com --php PHP+MySQL Website To create simple php website with database use this command. wo site create example.com --mysql NOTE: You can find MySQL database details in ee-config.php file. Proxy site To create site with Proxy configuration you can use --proxy during site creation wo site create example.com --proxy=host[:port] Here port is optional and default value is 80. For example, wo site create example.com --proxy=1.2.3.4 This will create proxy site example.com with proxy destination as 1.2.3.4 WordPress Site Following are the WordPress website types you can create website based on Cache Mechanism WordPress type (Single/Multisite) Standard WordPress Sites To create Standard/Single WordPress site use following command. wo site create example.com --wp # install wordpress without any page caching wo site create example.com --w3tc # install wordpress with w3-total-cache plugin wo site create example.com --wpsc # install wordpress with whisp-super-cache plugin wo site create example.com --wpfc # install wordpress + nginx fastcgi_cache wo site create example.com --wpredis # install wordpress + nginx redis_cache WordPress Multisite with subdirectory To create WordPress Multisite with subdirectory setup use from following command. wo site create example.com --wpsubdir # install wpmu-subdirectory without any page caching wo site create example.com --wpsubdir --w3tc # install wpmu-subdirectory with w3-total-cache plugin wo site create example.com --wpsubdir --wpsc # install wpmu-subdirectory with wp-super-cache plugin wo site create example.com --wpsubdir --wpfc # install wpmu-subdirectory + nginx fastcgi_cache wo site create example.com --wpsubdir --wpredis # install wpmu-subdirectory + nginx redis_cache WordPress Multisite with subdomain To create WordPress Multisite with subdomain setup use from following command. wo site create example.com --wpsubdom # install wpmu-subdomain without any page caching wo site create example.com --wpsubdom --w3tc # install wpmu-subdomain with w3-total-cache plugin wo site create example.com --wpsubdom --wpsc # install wpmu-subdomain with wp-super-cache plugin wo site create example.com --wpsubdom --wpfc # install wpmu-subdomain + nginx fastcgi_cache wo site create example.com --wpsubdom --wpredis # install wpmu-subdomain + nginx redis_cache WordPress Additional settings Define WordPress administrator user To define wordpress administrator user during site creation use wo site create example.com --user=admin This will create admin as administrator user in wordpress during installation. If not defined it will take git user name. Define WordPress administrator password To define wordpress administrator password during site creation use wo site create example.com --pass=password This will set defined password as administrator password. If not defined it will generate random pasword for administrator. If you have special characters, you can quote them using single quotes like this \u00e2\u20ac\" --pass='my$secret&' Define WordPress administrator email To define wordpress administrator email during site creation use wo site create example.com --email=ee@example.com This will set defined email as administrator email. If not defined it will set git email as administrator email. Additional features WordOps supports Let's Encrypt out of the box. wo site create example.com --letsencrypt You can add --letsencrypt to any other flag. PHP 7.3 To create site with PHP 7.3 you can use --php73 during site creation For example, you can create WordPress site running on PHP 7.3 using following command: wo site create example.com --wp --php73 To create simple php(with v7.0) website with no database use this command. wo site create example.com --php73 Let's Encrypt WordOps supports Let's Encrypt out of the box. wo site create example.com --letsencrypt You can add --letsencrypt to any other flag.","title":"Site"},{"location":"commands/site/#site","text":"wo site <command> <args>","title":"Site"},{"location":"commands/site/#overview","text":"command feature wo site create Create new site update Update site settings cd Go into site folder show Show site config log Show site logs enable Enable site disable Disable site info Show site info delete Delete site list list all sites","title":"Overview"},{"location":"commands/site/#commands","text":"","title":"Commands"},{"location":"commands/site/#create","text":"","title":"Create"},{"location":"commands/site/#standard-sites","text":"","title":"Standard sites"},{"location":"commands/site/#html-website","text":"To create simple html website use this command. wo site create example.com --html","title":"HTML Website"},{"location":"commands/site/#php-website","text":"To create simple php website with no database use this command. wo site create example.com --php","title":"PHP Website"},{"location":"commands/site/#phpmysql-website","text":"To create simple php website with database use this command. wo site create example.com --mysql NOTE: You can find MySQL database details in ee-config.php file.","title":"PHP+MySQL Website"},{"location":"commands/site/#proxy-site","text":"To create site with Proxy configuration you can use --proxy during site creation wo site create example.com --proxy=host[:port] Here port is optional and default value is 80. For example, wo site create example.com --proxy=1.2.3.4 This will create proxy site example.com with proxy destination as 1.2.3.4","title":"Proxy site"},{"location":"commands/site/#wordpress-site","text":"Following are the WordPress website types you can create website based on Cache Mechanism WordPress type (Single/Multisite)","title":"WordPress Site"},{"location":"commands/site/#standard-wordpress-sites","text":"To create Standard/Single WordPress site use following command. wo site create example.com --wp # install wordpress without any page caching wo site create example.com --w3tc # install wordpress with w3-total-cache plugin wo site create example.com --wpsc # install wordpress with whisp-super-cache plugin wo site create example.com --wpfc # install wordpress + nginx fastcgi_cache wo site create example.com --wpredis # install wordpress + nginx redis_cache","title":"Standard WordPress Sites"},{"location":"commands/site/#wordpress-multisite-with-subdirectory","text":"To create WordPress Multisite with subdirectory setup use from following command. wo site create example.com --wpsubdir # install wpmu-subdirectory without any page caching wo site create example.com --wpsubdir --w3tc # install wpmu-subdirectory with w3-total-cache plugin wo site create example.com --wpsubdir --wpsc # install wpmu-subdirectory with wp-super-cache plugin wo site create example.com --wpsubdir --wpfc # install wpmu-subdirectory + nginx fastcgi_cache wo site create example.com --wpsubdir --wpredis # install wpmu-subdirectory + nginx redis_cache WordPress Multisite with subdomain To create WordPress Multisite with subdomain setup use from following command. wo site create example.com --wpsubdom # install wpmu-subdomain without any page caching wo site create example.com --wpsubdom --w3tc # install wpmu-subdomain with w3-total-cache plugin wo site create example.com --wpsubdom --wpsc # install wpmu-subdomain with wp-super-cache plugin wo site create example.com --wpsubdom --wpfc # install wpmu-subdomain + nginx fastcgi_cache wo site create example.com --wpsubdom --wpredis # install wpmu-subdomain + nginx redis_cache","title":"WordPress Multisite with subdirectory"},{"location":"commands/site/#wordpress-additional-settings","text":"Define WordPress administrator user To define wordpress administrator user during site creation use wo site create example.com --user=admin This will create admin as administrator user in wordpress during installation. If not defined it will take git user name. Define WordPress administrator password To define wordpress administrator password during site creation use wo site create example.com --pass=password This will set defined password as administrator password. If not defined it will generate random pasword for administrator. If you have special characters, you can quote them using single quotes like this \u00e2\u20ac\" --pass='my$secret&' Define WordPress administrator email To define wordpress administrator email during site creation use wo site create example.com --email=ee@example.com This will set defined email as administrator email. If not defined it will set git email as administrator email.","title":"WordPress Additional settings"},{"location":"commands/site/#additional-features","text":"WordOps supports Let's Encrypt out of the box. wo site create example.com --letsencrypt You can add --letsencrypt to any other flag.","title":"Additional features"},{"location":"commands/site/#php-73","text":"To create site with PHP 7.3 you can use --php73 during site creation For example, you can create WordPress site running on PHP 7.3 using following command: wo site create example.com --wp --php73 To create simple php(with v7.0) website with no database use this command. wo site create example.com --php73","title":"PHP 7.3"},{"location":"commands/site/#lets-encrypt","text":"WordOps supports Let's Encrypt out of the box. wo site create example.com --letsencrypt You can add --letsencrypt to any other flag.","title":"Let's Encrypt"},{"location":"commands/stack/","text":"stack Install sets of packages Web This will install Nginx, PHP 7.2, MariaDB & additional tools available on port 22222 wo stack install or wo stack install web Admin tools wo stack install --admin Install individual packages Main packages Nginx wo stack install --nginx PHP 7.2 wo stack install --php MariaDB (MySQL) wo stack install --mysql Additional packages Adminer wo stack install --adminer PHPMyAdmin wo stack install --phpmyadmin","title":"stack"},{"location":"commands/stack/#stack","text":"","title":"stack"},{"location":"commands/stack/#install-sets-of-packages","text":"","title":"Install sets of packages"},{"location":"commands/stack/#web","text":"This will install Nginx, PHP 7.2, MariaDB & additional tools available on port 22222 wo stack install or wo stack install web","title":"Web"},{"location":"commands/stack/#admin-tools","text":"wo stack install --admin","title":"Admin tools"},{"location":"commands/stack/#install-individual-packages","text":"","title":"Install individual packages"},{"location":"commands/stack/#main-packages","text":"","title":"Main packages"},{"location":"commands/stack/#nginx","text":"wo stack install --nginx","title":"Nginx"},{"location":"commands/stack/#php-72","text":"wo stack install --php","title":"PHP 7.2"},{"location":"commands/stack/#mariadb-mysql","text":"wo stack install --mysql","title":"MariaDB (MySQL)"},{"location":"commands/stack/#additional-packages","text":"","title":"Additional packages"},{"location":"commands/stack/#adminer","text":"wo stack install --adminer","title":"Adminer"},{"location":"commands/stack/#phpmyadmin","text":"wo stack install --phpmyadmin","title":"PHPMyAdmin"},{"location":"commands/sync/","text":"","title":"Sync"},{"location":"commands/update/","text":"","title":"Update"}]}